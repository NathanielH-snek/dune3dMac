name: Build macOS binaries

on:
  push:
    branches:
      - '**'
      - '!appveyor-*'
      - '!freebsd-*'
      - '!pr-review*'
      - '!win32-*'
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: mac-intel
          - os: macos-14
            arch: mac-arm64
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check tag
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "Building tag ${{ github.ref }}"
    - uses: actions/checkout@v4
    - name: Unbreak python in github actions
      run: |
        find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
        sudo rm -rf /Library/Frameworks/Python.framework/
        brew install --force python3 && brew unlink python3 && brew unlink python3 && brew link --overwrite python3
    - name: Install
      shell: bash
      run: |
        # Keep this package list in sync with the docs:
        # https://github.com/dune3d/dune3d-docs/blob/main/build-macos.rst
        brew install \
          adwaita-icon-theme \
          cmake \
          eigen \
          glm \
          gtk4 \
          gtkmm4 \
          librsvg \
          llvm \
          meson \
          opencascade \
          pkg-config \
          pygobject3 \
          python@3
    - name: Build
      run: bash scripts/build_macos.sh && otool -L build/dune3d
    - name: Install dependencies for bundling
      run: brew install dylibbundler
    - name: Set artifact name
      run: echo "artifact_name=dune3d-${{ matrix.arch }}-$(date +%Y-%m-%d-%H%M)-$(echo ${{ github.ref_name }} | tr / -)" >> $GITHUB_ENV
    - name: Bundle app
      timeout-minutes: 10
      run: |
        bash scripts/bundle_macos.sh
        ditto -c -k --keepParent dist/Dune\ 3D.app dist/Dune3D-${{ matrix.arch }}.zip
    - name: Upload bundle
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: "dist/Dune3D-${{ matrix.arch }}.zip"
